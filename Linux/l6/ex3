Dowiedz się, co dokładnie oznaczają tryby dostępu rwx dla katalogów.

Read(r)
Like regular files, this permission allows you to read the contents of the directory. However, that means that you can view the contents (or files) stored within the directory. This permission is required to have things like the ls command work

Write(w)
As with regular files, this allows someone to modify the contents of the directory. When you are changing the contents of the directory, you are either adding files to the directory or removing files from the directory. As such, you must have write permission on a directory to move (mv) or remove (rm) files from it. You also need write permission to create new files (using touch or a file-redirect operator) or copy (cp) files into the directory

Execute(x)
This permission is very different on directories compared to files. Essentially, you can think of it as providing access to the directory. Having execute permission on a directory authorizes you to look at extended information on files in the directory (using ls -l, for instance) but also allows you to change your working directory (using cd) or pass through this directory on your way to a subdirectory underneath

Lacking execute permission on a directory can limit the other permissions in interesting ways. For example, how can you add a new file to a directory (by leveraging the write permission) if you can't access the directory's metadata to store the information for a new, additional file? You cannot. It is for this reason that directory-type files generally offer execute permission to one or more of the user owner, group owner, or others.


jakis przykladzik:
Take path /a/b/c.txt as an example, say the user has 1) execute permission on / and /a; 2) has read permission on /a/b; 3) read and write permission on /a/b/c.txt.

    The user will fail to read (list) /a, because it has no read permission. But the path resolution doesn't fail.

    The user will be able to read (list) /a/b, because the user has execute permission on /, /a and read permission on /a/b. Note that, when reading /a/b, the filename c.txt is visible, but the metadata (e.g. filesize) and the content is not, because the filename is stored with the directory, not with the file, but the metadata is stored in the inode of the file.

    The user will fail to read /a/b/c.txt, because when resolving the path from / to /a to /a/b, it fails at /a/b since the user doesn't have execute permission.



Jakie prawa do katalogu należy ustawić, żeby użytkownik mógł założyć
własny plik w tym katalogu, ale nie mógł wylistować zawartości tego katalogu?




Co to jest bit lepkości (sticky bit)?

The "sticky bit" is a directory-level special permission that restricts file deletion, meaning only the file owner can remove a file within the directory.

chmod +t [dir]

The permission set is noted by the lowercase t, where the x would normally indicate the execute privilege for "others".



Co to jest bit ustawiania grupy (setgid )?

Dzięki bitowi setgid w katalogu, wszystkie nowo tworzone pliki i katalogi stają się własnością grupy będącej właścicielem katalogu, zwykle atrybut ten jest dziedziczony przez nowo tworzone podkatalogi. Oznacza to, że jeśli katalog foo ma ustawiony bit setgid, to utworzone pliki w tym katalogu będą miały tą samą grupę co katalog, a nie osoba która utworzyła te pliki. Aby zlokalizować bit setgid, należy szukać literki s zamiast x w uprawnieniach grupy. 

chmod g+s [dir]




Jakie znaczenie mają dla katalogów, a jakie dla zwykłych plików?

 "sticky bit." This permission does not affect individual files. However, at the directory level, it restricts file deletion.

Commonly noted as SGID, this special permission has a couple of functions:
    If set on a file, it allows the file to be executed as the group that owns the file (similar to SUID)
    If set on a directory, any files created in the directory will have their group ownership set to that of the directory owner









Wyjaśnij prawa dostępu dla katalogów /tmp i /usr/local w Debianie.

(pliki tymczasowe, może być punktem montażowym tmpfs)
patryk@konkuter:/$ ls -l | grep tmp
drwxrwxrwt  17 root root       4096 kwi  5 15:36 tmp

katalog
wlascicel moze wszsytko
grupa wlasciciela moze wszsytko (ale usuwac moze tylko wlascicel)
inni moga wszsytko poza usuwaniem nie swoich rzeczy

(/usr/local/ część stała plików systemowych, trzeci poziom hierarchii)
patryk@konkuter:/usr$ ls -l | grep local
drwxr-xr-x  10 root root  4096 gru 17  2022 local

katalog
wlasciciel moze wszystko
grupa wlasciciela moze tylko czytac i i sprawdzac inodey







tak w ogole to jeszcze jest SUID ale nei ma o to pytania:
Commonly noted as SUID, the special permission for the user access level has a single function: A file with SUID always executes as the user who owns the file, regardless of the user passing the command. If the file owner doesn't have execute permissions, then use an uppercase S here.
